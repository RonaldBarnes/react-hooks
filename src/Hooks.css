
/**
 * Modified 2024-02-12 for handling Light & Dark modes without
 * FOIT (Flash Of Incorrect Theme).
 *
 * Requires some selectors and variables difined inside @media queries for
 * "(prefers-color-scheme: {light|dark})" ... AND
 * again outside the @media queries.
 *
 * Repetitive and redundant, but works.
 *
 * While moving colour definitions around, I couldn't help but notice how
 * "regrettable" some of CSS this is.
 *
 * I don't recall ever writing selectors this way before, what was I thinking?
 *
 * Future PR will be to give this a re-factor.
 *
 * FIXED! 2024-03-25
 */

/*
html
	{
	color-scheme: light dark;
	}
*/

body, input, textarea, button, select
	{
	box-sizing: border-box;
	margin: 0;
	padding: 0;

	--header-height: 100px;
/*  --sidebar-width: clamp(200px, max-content, 300px); */
  --sidebar-width: clamp(220px, 25vw, 290px);
  --colorLight: black;
  --colorDark: whitesmoke;
  --bg-color-light: whitesmoke;
  --bg-color-dark: #333;

  --box-shadow-color-light: black;
  --box-shadow-color-dark: gray;

	--button-background: lightgray;
	--button-color: black;
	--button-edge-light: rgb(152, 129, 129);
	--button-edge-dark: rgb(33, 29, 29);

	--link: blue;
	--visited: purple;
  --active: yellow;
	/**
	 * By using alpha, the transparency enables body to bleed through
	 * giving light and dark theme effects with one selector:
   * both -light and -dark therefore have same value:
	--sidebar-background-color-light: #cfefdf;
	--sidebar-background-color-dark: #365646;
	 */
	--sidebar-background-color-light: hsla(150, 50%, 50%, 0.25);
	--sidebar-background-color-dark: var(--sidebar-background-color-light);
	--blockquote-bg-color: hsla(50, 50%, 50%, 0.5);
	--header-color: whitesmoke;
	--header-bg-color: #333;
  --todoItemDark: whitesmoke;
  --todoItemLight: black;
  --todoItemCompleted: gray;
	transition: background-color 500ms;
	}

input
  {
  padding-inline: 0.5rem;
  }
textarea
  {
  padding: 0.5rem;
  }

p
	{
	font-size: 1.25rem;
	}

/* Make icons in sidebar all same width so list items align properly: */
.fa
	{
	width: 2rem;
	}

button {
	padding: 0.5rem 3rem 0.5rem 3rem;
	margin: 0.25rem;
	border: 3px solid;
	border-left-color: var(--button-edge-light);
	border-top-color: var(--button-edge-light);
	border-right-color: var(--button-edge-dark);
	border-bottom-color: var(--button-edge-dark);
	}
button:active {
	border-left-color: var(--button-edge-dark);
	border-top-color: var(--button-edge-dark);
	border-right-color: var(--button-edge-light);
	border-bottom-color: var(--button-edge-light);
	transition: all 250ms;
	}
button:focus {
	outline: 2px solid cornflowerblue;
	}
button:disabled
  {
  opacity: 0.5;
  color: black;
  background-color: gray;
  }

button, input, textarea {
	font-size: 1.5rem;
	border-radius: 5px;
	background-color: var(--button-background);
	color: var(--button-color);
	}

a {
	color: var(--link);
	}
a:visited {
	color: var(--visited);
	}
a:active
  {
  color: var(--active, white);
  }

input[type="checkbox"]
	{
	width: 2rem;
	height: 2rem;
	}

h2
	{
	font-size: clamp(1.75rem, 4vw, 3rem);
	text-align: center;
	}
h4
	{
	font-size: clamp(1.5rem, 2vw, 2rem);
	text-align: left;
	}


.container {
	min-height: 100dvh;
	display: grid;
	grid-template-rows: 100px auto 50px;

	/* grid-template-columns: clamp(12vw, 17vw, 22vw) 2fr; */
	grid-template-columns: auto 2fr;
	grid-template-areas:
		"header				header		header"
		"sidebar			hooks			hooks"
		"sidebar			footer		footer"
		;
	}

/*
	NOTE: the !important is required to ensure widths take effect,now that
	widths instead of display:{none|block} are used to show & hide sidebar:
*/
.nodisplay
	{
	width: 0 !important;
	/* display: none; */
	}
.display
	{
/*
	NOTE: the following line defeats transitions, but ONLY when
	media-query in effect, i.e. small screen AND sidebar-menu toggles:
*/
	/* width: var(--sidebar-width) !important; */
	width: 250px !important;
	display: block;
	}


.App-header {
	position: sticky;
	top: 0;
	z-index: 10;

	/* Reversed colours on header, and always dark: */
	color: var(--header-color);
	background-color: var(--header-bg-color);
	box-shadow: 0px 0px 25px 5px var(--box-shadow-color);

	grid-area: header;
	display: grid;
	grid-template-columns: 250px 1fr auto;
	grid-template-rows: var(--header-height);
	justify-content: center;
	align-items: center;
	overflow: hidden;
	}
.App-header * h2
	{
	font-size: clamp(2vw, 4vw, 5rem);
	margin: 0;
	display: inline;
	vertical-align: middle;
	}

.App-logo
	{
	animation: App-logo-spin infinite 20s linear;
	height: 80px;
	}
@keyframes App-logo-spin
	{
	from { transform: rotate(0deg); }
	to { transform: rotate(360deg); }
	}

img.flag
	{
	aspect-ratio: 1/1;
	height: fit-content;
  margin-inline: 0.5rem;
	}

.header_buttons
	{
	display: flex;
	flex-direction: row;
	justify-content: space-evenly;
	align-items: center;
	width: 180px;
	white-space: nowrap;
	padding-right: 0.5rem;
	}


.theme_selector {
	/* Reverse colours for header: */
	background-color: var(--header-bg-color);
	color: var(--header-color);

	cursor: pointer;
	border-radius: 5px;
	padding: 0.5rem;

	z-index:1;
	opacity:0.85;
	transition: all 250ms;
	font-size: 1.2rem;
	white-space: nowrap;
	width: 115px;
	text-align: right;
	}
.theme_selector:hover, .theme_selector:focus {
	/* Un-reversed colour for header child element hover: */
	background-color: var(--header-color);
	box-shadow: 0px 0px 5px 2px var(--header-color);
	color: var(--header-bg-color);
	/* outline: 1px solid var(--header-bg-color); */
	transition: all 250ms;
  /* ease-in-out; */
	}






.sidebar-menu
	{
	grid-area: hooks;;
	width: min-content;
	height: min-content;
	/* outline: 1px solid greenyellow; */
	font-size: 2rem;
	background-color: var(--sidebar-background-color-light);
	line-height: 3rem;
	z-index: 1;
	/* border-top-right-radius: 25%; */
	padding-inline: 1rem;
	border-bottom-right-radius: .5rem;
	box-shadow:
		/*
		NOTE: this makes the sidebar-menu tab appear to be part of the
		sidebar: 1st shadow touches sidebar at the <hr /> without gap,
		2nd shadow gives effect to right side of tab:
		*/
		0px 2px 2px 0px var(--box-shadow-color),
		2px 0px 2px 0px var(--box-shadow-color)
		;
	cursor: pointer;
	}

.sidebar {
	background-color: var(--sidebar-background-color-light);
	grid-area: sidebar;
	padding-bottom: 1rem;
	overflow: scroll;
  width: var(--sidebar-width);
/*  width: clamp(15vw, 17vw, 22vw);
  width: clamp(220px, 20vw, 270px);
*/
	transition: ease-in-out 300ms width;
	}
.sidebar > ul {
	list-style-type: none;
	font-size: 1.25rem;
	line-height: 2rem;
	padding-left: 1.5rem;
	margin: 0;
	padding: 0 0.5rem;
	white-space: nowrap;
	}
.sidebar > h4 {
	margin: 0.5rem 0 0 0.5rem;
	}
.sidebar > ul > li > ul {
	list-style-type: disc;
	font-size: 1.0rem;
	line-height: 1.5rem;
	padding-left: 0.75rem;
	}







.hooks {
	grid-area: hooks;
	padding: 0 1rem 0 1rem;
	overflow: scroll;
	margin-bottom: 1rem;
	max-width: 100%;
	/* transition: width 2s;
	transition-duration: 500ms;
	transition-timing-function: ease-in-out;
	transition-delay: 550ms; */
	}
/* .hooks::before
	{
	content: "";
	} */

.counter {
	margin: auto;
	font-size: 2rem;
	}

footer {
	grid-area: footer;
	text-align: center;
	align-self: center;
	margin-bottom: 1rem;
	}

.jsx {
	/*
		<code> is automatically a monospace:
		font-family: monospace;
	*/
	/* background-color: var(--color); */
	background-color: #222222;
	color: #ddd;
	padding: 0.25rem 1rem 1rem 1rem;
	margin: 0 auto 1.5rem 0 ;
	border-radius: 15px;
	box-shadow: 1px 1px 20px 0px var(--box-shadow-color);
	white-space: pre;
	display: block;
  max-width: 100dvw;
	overflow: scroll;
	}

.counter {
	text-align: center;
	margin-top: 1rem;
	}


code {
	padding: 0 0.25rem 0 0.25rem;
	font-family: monospace;
	}

.red {
	color: red;
	}
.green {
	color: lightgreen;
	}

blockquote {
	display: block;
	margin: 0 2.5rem 0 2.5rem;
	padding: 1rem 1.5rem 1rem 1.5rem;
	border-radius: 15px;
	border: 1px solid goldenrod;
	box-shadow: 1px 1px 20px 0px var(--box-shadow-color);
	background-color: var(--blockquote-bg-color);
	}
blockquote h3 {
	margin-top: 0;
	}





/* ****************************************************** */
@media (max-width: 1000px) {
	.App-header
		{
		grid-template-columns: min-content 1fr auto;
		}
	.header_buttons
		{
		display: flex;
		flex-direction: column;
		justify-content: space-evenly;
		align-items: flex-end;
		width: min-content;
		}
	.sidebar, .sidebar .nodisplay
		{
		width: 0;
		/* display: none; */
		/* transition: ease-in-out 300ms width; */
		}

	}
/*	☰× \9776 &lt; &#9776; &times; &gt;'; */
/* ****************************************************** */








.screenshot {
	margin: auto;
	margin-top: 2rem;
	box-shadow: 0px  0px 20px 1px var(--box-shadow-color);
	display: block;
	cursor: no-drop;
	border-radius: 10px;
	}

.btn {
	margin: 5px;
	}
.btn:focus, .btn:focus-visible {
	outline: 3px solid cornflowerblue;
	}



/* TODOS */
div.todos {
	display: grid;
	color: grey;
	margin-bottom: 1rem;
	grid-template-columns: 1fr 240px auto;
	place-items: center;
	border: 1px solid grey;
	}
.todoItem {
	display: inline-block;
	padding: 0px 1rem;
	margin-right: 1rem;
	border-radius: 5px;
	align-self: center;
	justify-self: left;
	color: var(--todoItem);
	}
.todoItemCompleted
	{
	color: var(--todoItemCompleted);
	text-decoration-line: line-through;
	}


.codeFormatted
	{
	margin-top: 2rem;
	}

.fa
	{
	text-align: center;
	}



/**
 * Media query repeats all dark theme selector definitions.
 *
 * This removes Flash Of Incorrect Theme (FOIT) if use's OS or browser
 * is set to prefer dark theme:
 */
@media ("(prefers-color-scheme: dark)")
{
  body
    {
    color-scheme: dark;
    --box-shadow-color: var(--box-shadow-color-dark);
    --link: orange;
    --visited: red;
    --todoItem: var(--todoItemDark, whitesmoke);
    --todoItemCompleted: gray;
    background-color: var(--bg-color-dark);
    color: var(--colorDark);
    }
  }	/* end @media prefers-color-scheme: dark */






/**
 * Repeat @media selectors, allows JS to add or remove class(es):
 */
body.darkModeTheme
  {
  color-scheme: dark;
  --box-shadow-color: var(--box-shadow-color-dark);
  --link: orange;
  --visited: red;
  --todoItem: var(--todoItemDark, whitesmoke);
  --todoItemCompleted: gray;
  background-color: var(--bg-color-dark);
  color: var(--colorDark);
  }

/**
 * End DARK THEME selectors
 */



/**
 * Media query repeats all light theme selector definitions.
 *
 * This removes Flash Of Incorrect Theme (FOIT) if use's OS or browser
 * is set to prefer light theme:
 */
@media ("(prefers-color-scheme: light)")
  {
  body.lightModeTheme
    {
    color-scheme: light;
    color: var(--colorLight);
    background-color: var(--bg-color-light);
    --background-color: #333;
    --box-shadow-color: var(--box-shadow-color-light);
    --link: blue;
    --visited: purple;
    --todoItem: var(--todoItemLight, black);
    --todoItemCompleted: gray;
    }
  }	/* end @media prefers-color-scheme: light */



body.lightModeTheme
  {
  color-scheme: light;
  --box-shadow-color: var(--box-shadow-color-light);
  --link: blue;
  --visited: purple;
  --todoItem: var(--todoItemLight, black);
  --todoItemCompleted: gray;
  color: var(--colorLight);
  background-color: var(--bg-color-light);
  }
