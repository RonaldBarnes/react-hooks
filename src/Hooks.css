/*
html {
	height: 100%;
	}
body {
	min-height: 100%;
	}
*/

/*
@font-face {
	font-family: 'FontAwesome';
	src: url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/fonts/fontawesome-webfont.eot?v=4.7.0');
	src: url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/fonts/fontawesome-webfont.eot?#iefix&v=4.7.0') format('embedded-opentype'),
		 url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/fonts/fontawesome-webfont.woff2?v=4.7.0') format('woff2'),
		 url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/fonts/fontawesome-webfont.woff?v=4.7.0') format('woff'),
		 url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/fonts/fontawesome-webfont.ttf?v=4.7.0') format('truetype'),
		 url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/fonts/fontawesome-webfont.svg?v=4.7.0#fontawesomeregular') format('svg');
	font-weight: normal;
	font-style: normal;
  }
*/

#root {
	box-sizing: border-box;
	font-size: 1.25rem;
	/* --box-shadow-color: lightgrey; */
	}
#root.darkModeTheme {
	--box-shadow-color: grey;
	}


body, input, textarea, button, select
	{
	/* --sidebar-width: minmax(220px, 250px); */
	--sidebar-width: 250px;
	--color: black;
	--background-color: whitesmoke;

	--box-shadow-color: black;

	--button-background: lightgray;
	--button-color: black;
	--button-edge-light: rgb(152, 129, 129);
	--button-edge-dark: rgb(33, 29, 29);

	--link: blue;
	--visited: purple;
	--sidebar-background-color: hsla(150, 50%, 50%, 0.25);
	--blockquote-bg-color: hsla(50, 50%, 50%, 0.5);
	--header-color: whitesmoke;
	--header-bg-color: #333;

	color: var(--color);
	background-color: var(--background-color);
	box-shadow: var(--box-shadow-color);
	}


button {
	padding: 0.5rem 3rem 0.5rem 3rem;
	border: 3px solid;
	border-left-color: var(--button-edge-light);
	border-top-color: var(--button-edge-light);
	border-right-color: var(--button-edge-dark);
	border-bottom-color: var(--button-edge-dark);
	transition: background-color 250ms;
	}
button:active {
	border-left-color: var(--button-edge-dark);
	border-top-color: var(--button-edge-dark);
	border-right-color: var(--button-edge-light);
	border-bottom-color: var(--button-edge-light);
	transition: all 250ms;
	}
button:focus {
	outline: 2px solid cornflowerblue;
	}
button, input, textarea {
	font-size: 1.5rem;
	border-radius: 5px;
	background-color: var(--button-background);
	color: var(--button-color);
	}
a {
	color: var(--link);
	}
a:visited {
	color: var(--visited);
	}
input[type="checkbox"]
	{
	width: 2rem;
	height: 2rem;
	color: red !important;
	background-color: goldenrod;
	}


.App-header {
	position: sticky;
	top: 0;
	z-index: 10;
	font-size: clamp(2.0vw, 3vw, 2.25rem);

	/* Reversed colours on header, and always dark: */
	color: var(--header-color);
	background-color: var(--header-bg-color);
	/* background-color: #333;
	color: whitesmoke; */
	box-shadow: 0px 0px 25px 5px var(--box-shadow-color);

	position: sticky;
	top: 0;
	z-index: 10;

	grid-area: header;
	display: grid;
	grid-template-columns: 250px 4fr 1fr ;
	grid-template-rows: 100px;
	/* gap: 2rem; */
	justify-content: center;
	align-items: center;
	/* border-bottom-right-radius: 5px; */
	overflow: hidden;
	/* padding: .25rem 0 .25rem 0; */
/*
	height: 150px;
  padding: 20px;
*/
	}
/* .App-header .darkModeTheme {
	background-color: var(--color);
	color: var(--background-color);
	} */

img .flag
	{
	aspect-ratio: 1/1;
	height: fit-content;
	}

.header_buttons
	{
	display: flex;
	flex-direction: row;
	justify-content: space-evenly;
	align-items: center;
	}

.theme_selector {
	/* Reverse colours for header: */
	background-color: var(--header-bg-color);
	color: var(--header-color);
	/* box-shadow: 0 0 5px var(--box-shadow-color); */

	/* position: absolute;
	right: clamp(2rem,5rem,8rem); */
	cursor: pointer;
	border-radius: 5px;
	padding: 1rem;
	/* outline: 1px solid var(--header-color); */
	z-index:1;
	opacity:0.85;
	transition: all 250ms;
	font-size: 1.2rem;
	white-space: nowrap;
	}
.theme_selector:hover, .theme_selector:focus {
	/* Un-reversed colour for header child element hover: */
	background-color: var(--header-color);
	box-shadow: 0px 0px 5px 2px var(--header-color);
	color: var(--header-bg-color);
	/* outline: 1px solid var(--header-bg-color); */
	transition: all 250ms;
 /* ease-in-out; */
	}






.sidebar {
	background-color: var(--sidebar-background-color);
	grid-area: sidebar;
	overflow: scroll;
/*	resize: horizontal;	*/

	position: sticky;
	/* bottom: 0; */
	/* top: 100px; */

	}
.sidebar > ul {
	list-style-type: none;
	font-size: 1.25rem;
	line-height: 2rem;
	padding-left: 1.5rem;
	margin: 0;
	white-space: nowrap;
	}
.sidebar > h4 {
	margin: 0.5rem 0 0 0.5rem;
	}
.sidebar > ul > li > ul {
	list-style-type: disc;
	font-size: 1.0rem;
	line-height: 1.5rem;
	padding-left: 0.75rem;
	}





.container {
	min-height: 100dvh;
	display: grid;

	grid-template-columns: --var(--sidebar-width) 1fr 1fr;
 /* minmax(220px, 250px) 1fr; */
	grid-template-columns: 250px 1fr 1fr;

/* grid-template-columns: clamp(200px, 20ch, 250px) 1fr; */
	grid-template-rows: 100px 1fr 40px;
	grid-template-areas:
		"header		header		header"
		"sidebar	hooks			hooks"
		"sidebar	footer		footer"
		;
	}




.hooks {
	grid-area: hooks;
	padding: 0 1rem 0 1rem;
	overflow: scroll;
	}

.counter {
	margin: auto;
	font-size: 2rem;
	}

input, textarea {
	font-size: 1.5rem;
	}

footer {
	grid-area: footer;
	text-align: center;
	align-self: center;
	}

.jsx {
	/*
		<code> is automatically a monospace:
		font-family: monospace;
	*/
	/* background-color: var(--color); */
	background-color: #222222;
	color: #ddd;
	padding: 0.25rem 1rem 1rem 1rem;
	margin: 0 auto 1.5rem 0 ;
	border-radius: 15px;
	box-shadow: 1px 1px 20px 0px var(--box-shadow-color);
	white-space: pre;
	display: block;
	max-width: 100dvw;	
	overflow: scroll;
	}

.counter {
	text-align: center;
	margin-top: 1rem;
	}


code {
	padding: 0 0.25rem 0 0.25rem;
	font-family: monospace;
	}

.red {
	color: red;
	}
.green {
	color: lightgreen;
	}

blockquote {
	display: block;
	margin: 0 2.5rem 0 2.5rem;
	padding: 1rem 1.5rem 1rem 1.5rem;
	border-radius: 15px;
	border: 1px solid goldenrod;
	box-shadow: 1px 1px 20px 0px var(--box-shadow-color);
	background-color: var(--blockquote-bg-color);
	}
blockquote h3 {
	margin-top: 0;
	}


/* :has(li):has(.active), */
ul > li > a.active {
	background-color: hsla(150, 50%, 50%, 0.5);
	}

@media (max-width: 1000px) {
	.container {
		min-height: 100dvh;
		max-width: 100vw;
		display: grid;
		grid-template-columns: 1fr;
		grid-template-rows: 100px 1fr 1fr 40px;
		grid-template-areas:
			"header"
			"hooks"
			"sidebar"
			"footer"
			;
		}
.App-header
	{
	justify-content: start;
	}
	}

.screenshot {
	margin: auto;
	margin-top: 2rem;
	box-shadow:
		 0px  0px 20px 1px var(--box-shadow-color)
		/* , */
		/* -0px -0px 20px 5px lightgrey */
		;
	display: block;
	cursor: no-drop;
	border-radius: 10px;
	}

.btn {
	margin: 5px;
	}
.btn:focus, .btn:focus-visible {
	outline: 3px solid cornflowerblue;
	}



/* TODOS */
div.todos {
	display: grid;
	color: grey;
	margin-bottom: 1rem;
	grid-template-columns: 1fr 240px auto;
	place-items: center;
	border: 1px solid grey;
	}
.todoItem {
	display: inline-block;
	color: black;
	padding: 0px 1rem;
	margin-right: 1rem;
	border-radius: 5px;
	align-self: center;
	justify-self: left;
	/* place-self: center left; */
	}
.todoItemCompleted {
	color: grey;
	}


.codeFormatted
	{
	margin-top: 2rem;
	}








body.darkModeTheme,
body.darkModeTheme * textarea,
body.darkModeTheme * input,
body.darkModeTheme * button,
body.darkModeTheme * select,
body.darkModeTheme * input[type="checkbox"]
	{
	--color: whitesmoke;
	--background-color: #333;
	--box-shadow-color: grey;
	background-color: var(--background-color);
	color: var(--color);
	}
/* body.darkModeTheme * textarea,
body.darkModeTheme * input,
body.darkModeTheme * button,
body.darkModeTheme * select
	{
	background-color: var(--background-color);
/* #555; */
/*
	color: var(--color);
	} */
body.darkModeTheme * a {
	color: orange;
	}
.darkModeTheme * a:visited {
	color: red;
	}
.App-header.darkModeTheme {
	--box-shadow-color: grey;
	}
blockquote.darkModeTheme {
	--box-shadow-color: grey;
	}
body.darkModeTheme * .todoItem {
	color: whitesmoke;
	}
body.darkModeTheme * .todoItemCompleted {
	color: grey;
	}


/*
	Had to give the button ID for enough specificity
	to get the useImperativeHandle page's Open button
	to look disabled properly.
	Kinda surprised, being at the end of the CSS file,
	expected being last to "win"...
*/
button:disabled, *:disabled, #btnOpen:disabled
	{
	background-color: gray;
	color: lightgray;
	}